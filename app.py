import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

st.set_page_config(page_title="PrÃ©questionnaire NeurodiversitÃ©", layout="wide")

st.title("PrÃ©questionnaire de NeurodiversitÃ© â€“ Prototype (Streamlit)")
st.caption("Dr BÃ©atrice MillÃªtre â€“ Prototype de passation en ligne avec profil en Ã©toile")

st.markdown('''
Ce prototype permet :
1) de **passer le questionnaire** (80 items, Ã©chelle 0â€“4) ;
2) de **gÃ©nÃ©rer automatiquement** les scores par dimension ;
3) dâ€™**afficher un profil en Ã©toile (radar)** ;
4) dâ€™**exporter** les rÃ©sultats (CSV et image) ;
5) de **proposer une interprÃ©tation automatique**.
''')

# --- Dimensions and items (simplifiÃ© ici pour la lisibilitÃ©, gardez vos 80 items) ---
dimensions = {
"D1 - Traitement de lâ€™information":[
"Quand on me donne une rÃ¨gle ou une consigne, je cherche dâ€™abord Ã  comprendre sa logique globale avant de lâ€™appliquer.",
"Quand quelquâ€™un me raconte un Ã©vÃ©nement, plusieurs images et idÃ©es apparaissent en mÃªme temps dans ma tÃªte.",
"Face Ã  un problÃ¨me, plusieurs solutions possibles surgissent spontanÃ©ment, sans effort conscient.",
"Pendant une rÃ©union, jâ€™ai souvent lâ€™impression de voir rapidement la conclusion, avant que les autres nâ€™y arrivent.",
"Quand on me donne une liste de tÃ¢ches, je prÃ©fÃ¨re les faire dans lâ€™ordre exact oÃ¹ elles ont Ã©tÃ© donnÃ©es.",
"Je progresse Ã©tape par Ã©tape, en terminant une partie avant de passer Ã  la suivante.",
"Pour rÃ©soudre un problÃ¨me, jâ€™applique dâ€™abord les mÃ©thodes apprises et connues.",
"Quand une explication est longue et dÃ©taillÃ©e, je perds le fil et je ne sais plus quel Ã©tait le point principal.",
"Quand on me donne une consigne complexe, jâ€™oublie parfois une partie ou je mÃ©lange les Ã©tapes.",
"Quand on me demande quelque chose de prÃ©cis, je lâ€™exÃ©cute exactement comme cela a Ã©tÃ© dit, mÃªme si cela paraÃ®t inhabituel."
],
"D2 - SensorialitÃ©":[
"Dans une cantine bruyante, les conversations et les bruits se mÃ©langent et je nâ€™arrive plus Ã  suivre mon interlocuteur.",
"Une couture ou une Ã©tiquette de vÃªtement peut mâ€™empÃªcher de le porter.",
"AprÃ¨s un moment dans une piÃ¨ce Ã©clairÃ©e au nÃ©on, je me sens fatiguÃ©(e) ou irritÃ©(e).",
"Je remarque immÃ©diatement un changement minime de goÃ»t ou dâ€™odeur dans un aliment.",
"AprÃ¨s une journÃ©e en ville, jâ€™ai besoin de silence pour retrouver mon Ã©quilibre.",
"Quand plusieurs personnes parlent en mÃªme temps, je perds le fil de la discussion.",
"Pour me sentir bien, jâ€™ai parfois besoin de musique forte, de bouger ou de rechercher des sensations intenses.",
"Quand une porte claque, je sursaute fortement, parfois avec une rÃ©action physique marquÃ©e.",
"Une odeur persistante peut me rester longtemps en tÃªte.",
"Dans un repas ou une soirÃ©e animÃ©e, je remarque le bruit et la lumiÃ¨re, mais je mâ€™y adapte sans gÃªne particuliÃ¨re."
],
# ... Ajoutez ici vos autres dimensions D3 Ã  D8 comme dans la version prÃ©cÃ©dente ...
}

st.sidebar.header("BarÃ¨me")
st.sidebar.write("**0 = Jamais | 1 = Rarement | 2 = Parfois | 3 = Souvent | 4 = Toujours**")
patient_name = st.sidebar.text_input("Nom / identifiant du patient", value="Patient A")
st.sidebar.info("Renseignez un identifiant (initiales ou code) si vous souhaitez anonymiser.")

# --- Questionnaire UI ---
all_scores = {}
with st.form("questionnaire"):
    for dim, items in dimensions.items():
        with st.expander(dim, expanded=False):
            dim_scores = []
            for i, item in enumerate(items, start=1):
                s = st.slider(f"{i}. {item}", min_value=0, max_value=4, value=0, step=1, key=f"{dim}_{i}")
                dim_scores.append(s)
            all_scores[dim] = dim_scores
    submitted = st.form_submit_button("Calculer le profil")

def compute_dimension_scores(all_scores):
    rows = []
    for dim, scores in all_scores.items():
        total = int(np.sum(scores))
        rows.append({"Dimension": dim, "Score": total, "Max": 40})
    return pd.DataFrame(rows)

def plot_radar(df):
    dims = df["Dimension"].tolist()
    scores = df["Score"].astype(float).to_numpy()
    maxs = df["Max"].astype(float).to_numpy()
    vals = scores / maxs

    N = len(dims)
    angles = np.linspace(0, 2*np.pi, N, endpoint=False).tolist()
    vals = np.concatenate((vals, [vals[0]]))
    angles += angles[:1]

    fig = plt.figure(figsize=(6,6))
    ax = plt.subplot(111, polar=True)
    ax.set_theta_offset(np.pi / 2)
    ax.set_theta_direction(-1)

    ax.set_xticks(angles[:-1])
    ax.set_xticklabels(dims, fontsize=9)

    ax.set_rlabel_position(0)
    ax.set_yticks([0.25, 0.5, 0.75, 1.0])
    ax.set_yticklabels(["10/40", "20/40", "30/40", "40/40"], fontsize=8)
    ax.set_ylim(0, 1)

    ax.plot(angles, vals, linewidth=2)
    ax.fill(angles, vals, alpha=0.25)

    title_lines = [f"{d}: {int(s)}/40" for d, s in zip(dims, scores)]
    title = f"Profil en Ã©toile â€“ {st.session_state.get('patient_name', 'Patient')}\n" + " | ".join(title_lines)
    plt.title(title, fontsize=10, pad=20)
    fig.tight_layout()
    return fig

# --- InterprÃ©tation automatique ---
def interpret_profile(df):
    scores = dict(zip(df["Dimension"], df["Score"]))
    txts = []

    # HPI
    if scores.get("D1 - Traitement de lâ€™information", 0) >= 20 \
       and scores.get("D6 - CrÃ©ativitÃ© et intuition", 0) >= 28 \
       and scores.get("D5 - Ã‰motions et rÃ©gulation", 0) >= 24 \
       and scores.get("D4 - Cognition sociale et communication", 0) >= 20:
        txts.append("ğŸŸ£ Profil compatible **HPI** : pensÃ©e associative, crÃ©ativitÃ© intuitive, intensitÃ© Ã©motionnelle et exigence de valeurs.")

    # TDAH
    if scores.get("D3 - Attention et concentration", 0) >= 24:
        txts.append("ğŸŸ  Profil compatible **TDAH** : difficultÃ©s attentionnelles persistantes avec impact fonctionnel (oubli, inachÃ¨vement).")

    # TSA
    if scores.get("D4 - Cognition sociale et communication", 0) >= 24 \
       and scores.get("D2 - SensorialitÃ©", 0) >= 24:
        txts.append("ğŸ”µ Profil compatible **TSA** : littÃ©ralitÃ© sociale, rigiditÃ© ou sensibilitÃ© sensorielle Ã©levÃ©e.")

    # 2E
    if scores.get("D7 - Double exceptionnalitÃ©", 0) >= 24 \
       and (scores.get("D1 - Traitement de lâ€™information", 0) >= 28 \
            or scores.get("D6 - CrÃ©ativitÃ© et intuition", 0) >= 28 \
            or scores.get("D5 - Ã‰motions et rÃ©gulation", 0) >= 28):
        txts.append("ğŸŸ¢ Profil compatible **2E (double exceptionnalitÃ©)** : coexistence de forces remarquables et de difficultÃ©s importantes.")

    # NT
    if all(v <= 15 for v in scores.values()):
        txts.append("âšª Profil compatible **Neurotypique (NT)** : Ã©quilibre attentionnel, Ã©motionnel et sensoriel sans particularitÃ© marquÃ©e.")

    if not txts:
        txts.append("Profil nuancÃ© : aucune orientation claire unique. Lâ€™interprÃ©tat
